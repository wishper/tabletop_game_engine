/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package briscola;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import game_engine.CardPlayer;
import game_engine.TestPlayer;
import game_engine.standard_cards.ItalianCard;
import game_engine.standard_cards.ItalianCard.Seme;
import game_engine.standard_cards.ItalianCard.Valore;
import org.junit.Before;
import org.junit.Test;

public class BriscolaRules {

	private Mano mano;
	private CardPlayer<ItalianCard> player0,player1,player2,player3;

	@Before public void setup() {
		mano = new Mano(Seme.ORO);
		player0 = new TestPlayer<>("0");
		player1 = new TestPlayer<>("1");
		player2 = new TestPlayer<>("2");
		player3 = new TestPlayer<>("3");
	}

	@Test public void testTurnoPresaDiBriscola() {
		mano.add(new AzioneDellaMano(player0, new ItalianCard(Seme.BASTONI, Valore.ASSO)));
		mano.add(new AzioneDellaMano(player1, new ItalianCard(Seme.ORO, Valore.RE)));
		mano.add(new AzioneDellaMano(player2, new ItalianCard(Seme.ORO, Valore.CAVALLO)));
		mano.add(new AzioneDellaMano(player3, new ItalianCard(Seme.ORO, Valore.FANTE)));

		RisultatoMano result = mano.risolvi();
		assertEquals(11+4+3+2, result.getPunti());
		assertEquals(player1, result.getGiocatoreVincente());
	}

	@Test public void testNessunoRisponde() {
		mano.add(new AzioneDellaMano(player0, new ItalianCard(Seme.BASTONI, Valore.DUE)));
		mano.add(new AzioneDellaMano(player1, new ItalianCard(Seme.COPPE, Valore.RE)));
		mano.add(new AzioneDellaMano(player2, new ItalianCard(Seme.COPPE, Valore.CAVALLO)));
		mano.add(new AzioneDellaMano(player3, new ItalianCard(Seme.COPPE, Valore.FANTE)));

		RisultatoMano result = mano.risolvi();
		assertEquals(0+4+3+2, result.getPunti());
		assertEquals(player0, result.getGiocatoreVincente());
	}


	@Test public void player2RispondeMaNonVince() {
		mano.add(new AzioneDellaMano(player0, new ItalianCard(Seme.BASTONI, Valore.CINQUE)));
		mano.add(new AzioneDellaMano(player1, new ItalianCard(Seme.COPPE, Valore.DUE)));
		mano.add(new AzioneDellaMano(player2, new ItalianCard(Seme.BASTONI, Valore.QUATTRO)));
		mano.add(new AzioneDellaMano(player3, new ItalianCard(Seme.COPPE, Valore.SEI)));

		RisultatoMano result = mano.risolvi();
		assertEquals(0, result.getPunti());
		assertEquals(player0, result.getGiocatoreVincente());
	}

	@Test public void player3RispondeEVince() {
		mano.add(new AzioneDellaMano(player0, new ItalianCard(Seme.BASTONI, Valore.QUATTRO)));
		mano.add(new AzioneDellaMano(player1, new ItalianCard(Seme.COPPE, Valore.DUE)));
		mano.add(new AzioneDellaMano(player2, new ItalianCard(Seme.COPPE, Valore.QUATTRO)));
		mano.add(new AzioneDellaMano(player3, new ItalianCard(Seme.BASTONI, Valore.SEI)));

		RisultatoMano result = mano.risolvi();
		assertEquals(0, result.getPunti());
		assertEquals(player3, result.getGiocatoreVincente());
	}


	@Test public void testPresaDiBriscola() {
		Mano ta = new Mano(Seme.ORO);
		assertTrue(
				ta.laSecondaVince(
						new ItalianCard(Seme.BASTONI, Valore.ASSO),
						new ItalianCard(Seme.ORO, Valore.DUE))
				);
		assertFalse(
				ta.laSecondaVince(
						new ItalianCard(Seme.ORO, Valore.ASSO),
						new ItalianCard(Seme.BASTONI, Valore.DUE))
				);
	}

	@Test public void testBriscolaPiuAlta() {
		Mano ta = new Mano(Seme.ORO);
		assertFalse(
				ta.laSecondaVince(
						new ItalianCard(Seme.ORO, Valore.ASSO),
						new ItalianCard(Seme.ORO, Valore.RE)
						)
				);
		assertTrue(
				ta.laSecondaVince(
						new ItalianCard(Seme.ORO, Valore.RE),
						new ItalianCard(Seme.ORO, Valore.ASSO)
						)
				);
	}


	@Test public void testCartaPiuAlta() {
		Mano ta = new Mano(Seme.ORO);
		assertFalse(
				ta.laSecondaVince(
						new ItalianCard(Seme.BASTONI, Valore.ASSO),
						new ItalianCard(Seme.BASTONI, Valore.RE)
						)
				);
		assertTrue(
				ta.laSecondaVince(
						new ItalianCard(Seme.BASTONI, Valore.RE),
						new ItalianCard(Seme.BASTONI, Valore.ASSO)
						)
				);
	}

	@Test public void testNonRispondeAlSeme() {
		Mano ta = new Mano(Seme.ORO);
		assertFalse(
				ta.laSecondaVince(
						new ItalianCard(Seme.BASTONI, Valore.DUE),
						new ItalianCard(Seme.COPPE, Valore.RE)
						)
				);

	}
}